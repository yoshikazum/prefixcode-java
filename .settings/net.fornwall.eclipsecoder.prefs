#Sun Nov 27 18:45:15 JST 2011
eclipse.preferences.version=1
problemStatement=PrefixCode.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?> \n<java version\="1.6.0_26" class\="java.beans.XMLDecoder"> \n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement"> \n  <void property\="className"> \n   <string>PrefixCode</string> \n  </void> \n  <void property\="contestName"> \n   <string>SRM 151 DIV 2 - 250 points</string> \n  </void> \n  <void property\="htmlDescription"> \n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;PrefixCode&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;A prefix code is a set of words in which no word is a prefix of another word in the set.\nA word &lt;i&gt;v&lt;/i&gt; is said to be a prefix of a word &lt;i&gt;w&lt;/i&gt; if &lt;i&gt;w&lt;/i&gt; starts with &lt;i&gt;v&lt;/i&gt;.&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nAn important property of prefix codes is that they are uniquely decodable.\nPrefix codes are commonly used - telephone numbers are an everyday example (as you probably don&apos;t\nwant a stranger to pick up the phone call you make just because his number is a prefix of the\nnumber you intend to dial). Prefix codes are also very popular in computer science, the Huffman code\nused for data compression being a famous example.&lt;br&gt;&lt;/br&gt;\n&lt;br&gt;&lt;/br&gt;\nGiven a String[] &lt;b&gt;words&lt;/b&gt;, return the String &amp;quot;Yes&amp;quot; if that set of words\nis a prefix code or return the String &lt;tt&gt;&amp;quot;No, i&amp;quot;&lt;/tt&gt; if it is not, where &lt;tt&gt;i&lt;/tt&gt; is replaced by\nthe lowest 0-based index of a String in &lt;b&gt;words&lt;/b&gt; that is a prefix of another String in &lt;b&gt;words&lt;/b&gt;.\n(That index should have no extra leading zeros.)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;PrefixCode&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;isOne&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;String[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;String isOne(String[] words)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Notes&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Letters are case sensitive (e.g. &amp;quot;No&amp;quot; is not a prefix of &amp;quot;not&amp;quot;).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Do not forget the single space between the comma and i in &amp;quot;No, i&amp;quot;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;words&lt;/b&gt; contains between 1 and 50 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;words&lt;/b&gt; contains between 1 and 50 characters, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;words&lt;/b&gt; consists only of characters &apos;0&apos;-&apos;9&apos;, &apos;A&apos;-&apos;Z&apos; and &apos;a&apos;-&apos;z&apos;, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;No two elements of &lt;b&gt;words&lt;/b&gt; are equal (as the input represents a set).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;trivial&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;Yes&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;As there is only one word, no word can be the prefix of another, so this is a trivial example of a prefix code.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;10001&amp;quot;, &amp;quot;011&amp;quot;, &amp;quot;100&amp;quot;, &amp;quot;001&amp;quot;, &amp;quot;10&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;No, 2&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&amp;quot;100&amp;quot; (at index 2) and &amp;quot;10&amp;quot; (at index 4) are both a prefix of &amp;quot;10001&amp;quot; and &amp;quot;10&amp;quot; is also a prefix of &amp;quot;100&amp;quot;, therefore it is no prefix code. &amp;quot;100&amp;quot; is the prefix with the lowest index.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;no&amp;quot;, &amp;quot;nosy&amp;quot;, &amp;quot;neighbors&amp;quot;, &amp;quot;needed&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;No, 0&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;1010&amp;quot;, &amp;quot;11&amp;quot;, &amp;quot;100&amp;quot;, &amp;quot;0&amp;quot;, &amp;quot;1011&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;Yes&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;No&amp;quot;, &amp;quot;not&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;Yes&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string> \n  </void> \n  <void property\="methodName"> \n   <string>isOne</string> \n  </void> \n  <void property\="parameterNames"> \n   <void method\="add"> \n    <string>words</string> \n   </void> \n  </void> \n  <void property\="parameterTypes"> \n   <void method\="add"> \n    <class>[Ljava.lang.String;</class> \n   </void> \n  </void> \n  <void property\="returnType"> \n   <class>java.lang.String</class> \n  </void> \n  <void property\="testCases"> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="1"> \n         <void index\="0"> \n          <string>trivial</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>Yes</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="5"> \n         <void index\="0"> \n          <string>10001</string> \n         </void> \n         <void index\="1"> \n          <string>011</string> \n         </void> \n         <void index\="2"> \n          <string>100</string> \n         </void> \n         <void index\="3"> \n          <string>001</string> \n         </void> \n         <void index\="4"> \n          <string>10</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>No, 2</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="4"> \n         <void index\="0"> \n          <string>no</string> \n         </void> \n         <void index\="1"> \n          <string>nosy</string> \n         </void> \n         <void index\="2"> \n          <string>neighbors</string> \n         </void> \n         <void index\="3"> \n          <string>needed</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>No, 0</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="5"> \n         <void index\="0"> \n          <string>1010</string> \n         </void> \n         <void index\="1"> \n          <string>11</string> \n         </void> \n         <void index\="2"> \n          <string>100</string> \n         </void> \n         <void index\="3"> \n          <string>0</string> \n         </void> \n         <void index\="4"> \n          <string>1011</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>Yes</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="2"> \n         <void index\="0"> \n          <string>No</string> \n         </void> \n         <void index\="1"> \n          <string>not</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>Yes</string> \n     </void> \n    </object> \n   </void> \n  </void> \n </object> \n</java> \n
